Description:


a. Read number num from user.
b. Read number n from user.
c. Do error checking
  -> If n is greater than integer size, assign n value as sizeof integer.
d. Print n number of bits of num from LSB end.
If num is 10 and n is 12, then print last 12 bits of binary representation of 10.
The output should be -> 0 0 0 0 0 0 0 0 1 0 1 0

Pre-requisites:

Bitwise operators
Functions

//code//

#include <stdio.h>

int print_bits(int num, int n)
{
    
    unsigned int mask=(1<<n)-1;
    unsigned int bit= num & mask;
    for(int i=n-1;i>=0;i--)
    {
        printf("%u\t",(bit>>i)&1);
    }
}

int main()
{
    int num, n;
    
    printf("Enter num, n :\n");
    scanf("%d%d", &num, &n);
    
    printf("Binary form of %d:", num);
    print_bits(num, n);
    return 0;
}
